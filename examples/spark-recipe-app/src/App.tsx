import React, { useState } from 'react';
import { Search, Star, Clock, Users } from 'lucide-react';

interface Recipe {
  id: number;
  title: string;
  description: string;
  cookTime: number;
  servings: number;
  rating: number;
  image: string;
  ingredients: string[];
  instructions: string[];
}

function App() {
  const [searchQuery, setSearchQuery] = useState('');
  const [recipes, setRecipes] = useState<Recipe[]>([]);
  const [loading, setLoading] = useState(false);

  // Mock AI-powered recipe search
  const searchRecipes = async () => {
    setLoading(true);
    
    // Simulate AI API call
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    const mockRecipes: Recipe[] = [
      {
        id: 1,
        title: "AI-Suggested Pasta Primavera",
        description: "A colorful spring pasta with fresh vegetables, generated by AI based on seasonal ingredients.",
        cookTime: 25,
        servings: 4,
        rating: 4.8,
        image: "https://images.unsplash.com/photo-1621996346565-e3dbc353d2e5?w=400",
        ingredients: ["Pasta", "Bell peppers", "Zucchini", "Cherry tomatoes", "Olive oil", "Garlic"],
        instructions: ["Boil pasta", "Saut√© vegetables", "Combine and serve"]
      },
      {
        id: 2,
        title: "Smart Chicken Stir Fry",
        description: "AI-optimized stir fry with perfect timing and ingredient ratios.",
        cookTime: 15,
        servings: 2,
        rating: 4.6,
        image: "https://images.unsplash.com/photo-1603133872878-684f208fb84b?w=400",
        ingredients: ["Chicken breast", "Mixed vegetables", "Soy sauce", "Ginger", "Rice"],
        instructions: ["Prep ingredients", "Cook chicken", "Add vegetables", "Serve over rice"]
      }
    ];
    
    setRecipes(mockRecipes);
    setLoading(false);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 py-8">
        <header className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-800 mb-4">
            AI Recipe Finder
          </h1>
          <p className="text-lg text-gray-600">
            Discover personalized recipes powered by artificial intelligence
          </p>
        </header>

        <div className="max-w-2xl mx-auto mb-8">
          <div className="flex gap-2">
            <div className="flex-1 relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" size={20} />
              <input
                type="text"
                placeholder="Search for recipes, ingredients, or cuisines..."
                className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                onKeyPress={(e) => e.key === 'Enter' && searchRecipes()}
              />
            </div>
            <button
              onClick={searchRecipes}
              disabled={loading}
              className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
            >
              {loading ? 'Searching...' : 'Search'}
            </button>
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {recipes.map((recipe) => (
            <div key={recipe.id} className="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
              <img
                src={recipe.image}
                alt={recipe.title}
                className="w-full h-48 object-cover"
              />
              <div className="p-6">
                <h3 className="text-xl font-semibold text-gray-800 mb-2">
                  {recipe.title}
                </h3>
                <p className="text-gray-600 mb-4">
                  {recipe.description}
                </p>
                
                <div className="flex items-center justify-between text-sm text-gray-500 mb-4">
                  <div className="flex items-center gap-1">
                    <Clock size={16} />
                    <span>{recipe.cookTime} min</span>
                  </div>
                  <div className="flex items-center gap-1">
                    <Users size={16} />
                    <span>{recipe.servings} servings</span>
                  </div>
                  <div className="flex items-center gap-1">
                    <Star size={16} fill="currentColor" className="text-yellow-400" />
                    <span>{recipe.rating}</span>
                  </div>
                </div>

                <button className="w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 transition-colors">
                  View Recipe
                </button>
              </div>
            </div>
          ))}
        </div>

        {recipes.length === 0 && !loading && (
          <div className="text-center py-12">
            <p className="text-gray-500 text-lg">
              Enter a search term to discover AI-powered recipe recommendations
            </p>
          </div>
        )}
      </div>
    </div>
  );
}

export default App;